/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB   &kp Q        &kp W             &kp E           &kp R           &kp T        &kp Y      &kp U            &kp I            &kp O              &kp P                   &kp LEFT_BRACKET
&kp CAPS  &mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G        &kp H      &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RIGHT_SHIFT L  &mt RIGHT_CONTROL SEMI  &kp SQT
&none     &kp Z        &kp X             &kp C           &kp V           &kp B        &kp N      &kp M            &kp COMMA        &kp DOT            &kp FSLH                &kp RIGHT_BRACKET
                                         &kp ESCAPE      &mo 1           &kp SPACE    &kp ENTER  &mo 2            &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1   &kp N2          &kp N3            &kp N4                &kp N5       &kp N6     &kp N7                 &kp N8             &kp N9           &kp N0             &none
&none    &kp SQT  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp PLUS     &kp MINUS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp DOUBLE_QUOTES  &none
&none    &trans   &trans          &kp GRAVE         &kp TILDE             &trans       &kp EQUAL  &none                  &none              &none            &kp PIPE           &none
                                  &kp DELETE        &trans                &kp SPACE    &kp RET    &trans                 &kp BACKSPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK      &none      &none   &none
&none    &none     &none   &none     &none     &none        &kp LEFT   &kp DOWN  &kp UP         &kp RIGHT  &trans  &trans
&none    &trans    &trans  &trans    &trans    &trans       &trans     &trans    &trans         &trans     &trans  &trans
                           &none     &trans    &kp SPACE    &kp ENTER  &trans    &kp BACKSPACE
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp INSERT  &kp HOME     &kp PG_UP      &none   &none   &none
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &trans      &kp PAGE_UP  &kp PAGE_DOWN  &trans  &trans  &trans
&kp F7      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &trans      &trans       &trans         &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans      &trans       &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
